defmodule Gut.Repo.Migrations.AddSpeakers do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:speakers, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :full_name, :text, null: false
      add :first_name, :text, null: false
      add :last_name, :text, null: false
      add :arrival_date, :date
      add :arrival_time, :time
      add :leaving_date, :date
      add :leaving_time, :time
      add :hotel_stay_start_date, :date
      add :hotel_stay_end_date, :date
      add :hotel_covered_start_date, :date
      add :hotel_covered_end_date, :date

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "speakers_user_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:speakers, "speakers_user_id_fkey")

    drop table(:speakers)
  end
end
